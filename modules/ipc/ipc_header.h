/* This file has been automatically generated by builder part of the ferite distribution */
#ifndef __ipc_HEADER__
#define __ipc_HEADER__

#include <ferite.h>

FERITE_API void ferite_ipc_register();
FERITE_API void ferite_ipc_unregister();
FERITE_API void ferite_ipc_init( FeriteScript *script );
FERITE_API void ferite_ipc_deinit( FeriteScript *script );

    /* Start user defined header code */


 
#include "config.h"
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#if defined(USING_DARWIN) || defined(USE_SNOWLEOPARD)
# include <sys/semaphore.h>
#endif
#include <sys/sem.h>
#define DEFAULT_PERMISSION 0666
#define DEFAULT_SEGMENT_SIZE 4096
 
#if defined(USING_DARWIN) || defined(USE_SNOWLEOPARD) || defined(__FreeBSD__) || defined(__GNU_LIBRARY__) && !defined(_SEM_SEMUN_UNDEFINED)
 /* union semun is defined by including <sys/sem.h> */
#else
 /* according to X/OPEN we have to define it ourselves */
 union semun
{
 int val; /* value for SETVAL */
 struct semid_ds *buf; /* buffer for IPC_STAT, IPC_SET */
 unsigned short int *array; /* array for GETALL, SETALL */
 struct seminfo *__buf; /* buffer for IPC_INFO */
};
#endif

typedef struct ipc_data
{
 key_t key; // key for the shared memory segment
 size_t size; // size of shared memory segment
 int perm; // permissions for the shm
 
 int shmid; // the shared memory segments id
 int shmflag; // default is 0
 int connected; // am I connected or not
 
 int semid; // semaphore set id
 struct sembuf sembuffer; // the semaphore
 
 char *data; // pointer to the shared memory segment
 
}
IpcData;

#define OAS( o ) ((IpcData*)(o->odata))
#define SelfObj ((IpcData*)(self->odata))


    /* End user defined header code */

FE_NATIVE_FUNCTION( ferite_ipc_IPCObject_read_ );
FE_NATIVE_FUNCTION( ferite_ipc_IPCObject_disconnect_ );
FE_NATIVE_FUNCTION( ferite_ipc_IPCObject_write_s );
FE_NATIVE_FUNCTION( ferite_ipc_IPCObject_connect_s );
FE_NATIVE_FUNCTION( ferite_ipc_IPCObject_destructor_ );
FE_NATIVE_FUNCTION( ferite_ipc_IPCObject_constructor_n );

#endif /* __ipc_HEADER__ */
